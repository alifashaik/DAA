#include<stdio.h>
#include<stdlib.h>
#define INT_MAX 6001
int minnode(int dis[],int vis[],int n)
{
    int min=INT_MAX;
    int ind=0;
    for(int i=0;i<n;i++)
        if(min>dis[i] && vis[i]==0){
          min=dis[i];
          ind=i;}
    return ind;
}

int networkDelayTime(int times[3][3], int timesSize, int n, int k){
//printf("%d",times[0][1]);
int dis[n],s[n],vis[n];
int c=0;
for(int i=0;i<timesSize;i++)
  if(times[i][0]==k)
  {   c=1;
      dis[times[i][1]-1]=times[i][2];
      s[times[i][1]-1]=1;
  }
if(c==0)
return -1;
for(int i=0;i<n;i++){
if(s[i]==0)
dis[i]=INT_MAX;
vis[i]=0;
}
dis[k-1]=0;
vis[k-1]=1;
for(int i=1;i<n-1;i++)
{
   int node=minnode(dis,vis,n);
   vis[node]=1;
   for(int j=0;j<timesSize;j++)
   {
       if(times[j][0]==node+1 && vis[times[j][1]-1]==0)
          if(dis[times[j][1]-1]>(dis[node]+times[j][2]))
              dis[times[j][1]-1]=(dis[node]+times[j][2]);
   }
}
int res=dis[0];
for(int i=1;i<n;i++)
   if(res<dis[i])
      res=dis[i];
//printf("%d",res);
if(res>=INT_MAX)
return -1;
return res;
}

void main()
{
    int times[3][3]= {2,1,1,2,3,1,3,4,1};
    int n = 4, k = 2;
    int r=networkDelayTime(times,3, n,k);
    printf("%d",r);
}
